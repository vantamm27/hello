name: react
on:
  push:
    branches: [ master, staging, development ]
# env:
#   # Setting an environment variable with the value of a configuration variable
#   env_var: ${{ vars.ENV_CONTEXT_VAR }}

jobs:
  dev-build-package:
    runs-on: ubuntu-latest
    environment: production
    if: ${{ github.ref == 'refs/heads/development' }}
    # container: 
    #   image: golang:1.20.4
    #   env:
    #     NODE_ENV: develop
    #   options: -e ${{github.workspace}} -v "${{github.workspace}}":"${{github.workspace}}"
    steps:
      - name: check working dir
        run: pwd

      - name: chcekout 
        uses: actions/checkout@v2

      - name: check source 
        run: ls ./


      - name: print env
        run: echo "$GITHUB_RUN_ID $GITHUB_ACTOR_ID ${{vars.SERVICE_NAME}} ${GITHUB_SHA::7} "
        
      - name: Login Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
        id: buildx


      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        id: docker_build
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: "${{secrets.DOCKERHUB_USERNAME}}/${{vars.SERVICE_NAME}}:$GITHUB_ACTOR_ID"
          # cache-from: type=local,src=/tmp/.buildx-cache
          # cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Verify
        run: echo ${{ steps.docker_build.outputs.digest }}

      
